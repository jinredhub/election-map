{"version":3,"sources":["components/Navbar/Navbar.js","assets/bidenj.png","assets/trumpd.png","components/BarChart/BarChart.js","components/ElectionMap/ElectionMap.js","components/Footer/Footer.js","pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","style","isHamburgerMenuOpen","displayLinks","map","val","i","href","className","name","activeLink","display","aria-label","onClick","clicked","icon","size","barChart","chartRef","React","createRef","state","chartMargin","top","right","bottom","left","width3","height3","mySvg","xScale","xAxis","createSvg","accessToRef","current","w1","clientWidth","d3","append","attr","range","padding","round","yScale","clamp","yAxis","updateChart","domain","data","d","index","transition","duration","call","tickFormat","selectAll","value","ticks","binding","that","bandwidth","partyId","enter","exit","remove","this","ref","Component","electionMap","democratCount","republicanCount","democratVotes","republicanVotes","barchartdata","isStateDetailPanelVisible","tableContent","isMapSpinnerVisible","createMap","setState","stateDetailLeft","select","mapContainerEl","document","querySelector","mapWidth","parseFloat","getComputedStyle","width","replace","mapHeight","worldMapSvg","files","projection","translate","scale","worldMapPath","Promise","all","url","then","values","tableInformation","races","joeBidenData","candidates","filter","candidate","candidate_key","donaldTrumpData","stateName","state_name","joeBiden","doanldTrump","reportingValue","reporting_value","winner","party_control","parties","democrat","count","republican","votes","democratPercent","percent","republicanPercent","states","topojson","objects","features","forEach","state_value","state_index","race_value","race_index","stateName_value","stateName_index","properties","abbreviation","electoralVotes","electoral_votes","party_id","on","candidateArray","push","last_name","x","pageX","y","pageY","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","hoverStateName","stateDetailTop","text","centroid","includes","numberWithCommas","toString","windowWidth","window","innerWidth","addEventListener","oldWindowWidth","newWindowWidth","balanceHeader","color","fontWeight","fontSize","paddingBottom","textAlign","flex","backgroundColor","tooltipStyle","opacity","tooltip","marginTop","BarChart","percent_display","overflowX","src","joeImg","alt","trumpImg","footer","Home","hamburgerMenuHandler","library","add","faBars","faCheck","faGithubAlt","faMugHot","faCircleNotch","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82c1425f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst navbar = (props) =>{\r\n    const style={'display': 'none'};\r\n    const isHamburgerMenuOpen = props.isHamburgerMenuOpen;\r\n\r\n    const links = [\r\n        {'href': 'https://jinredhub.github.io/arpeggios/', 'name': 'Arpeggios'},\r\n        {'href': 'https://jinredhub.github.io/daw/', 'name': 'DAW'},\r\n        {'href': 'https://jinredhub.github.io/us-map-covid-19/', 'name': 'Covid Map'},\r\n        {'href': 'https://jinredhub.github.io/us-map-covid-19/', 'name': 'Election Map'},\r\n    ];\r\n\r\n    const displayLinks = links.map((val, i) =>{\r\n        return <a href={val.href} className={val.name === props.activeLink ? 'active' : ''} key={i}>{val.name}</a>;\r\n    });\r\n\r\n    if(isHamburgerMenuOpen){\r\n        style.display = 'block';\r\n    }\r\n    \r\n    return(\r\n        <div className='Navbar'>\r\n            <div className='desktop'>\r\n                <div>\r\n                    {displayLinks}\r\n                </div>               \r\n            </div>\r\n            <div className='mobile'>\r\n                <div className='mobildLinks' style={style}>\r\n                    {displayLinks}\r\n                </div>\r\n                <button className='hamburgerIcon' aria-label=\"click to open mobile navigation menu\" onClick={props.clicked}>\r\n                    <FontAwesomeIcon\r\n                        icon={['fas', 'bars']}\r\n                        size='sm'\r\n                    />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar;","export default __webpack_public_path__ + \"static/media/bidenj.8156bbc2.png\";","export default __webpack_public_path__ + \"static/media/trumpd.7e5680b1.png\";","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass barChart extends Component {\r\n    chartRef = React.createRef();\r\n\r\n    state = {\r\n    };\r\n\r\n    chartMargin = {top: 20, right: 20, bottom: 30, left: 40};\r\n    width3 = 200 - this.chartMargin.left - this.chartMargin.right;\r\n    height3 = 100 - this.chartMargin.top - this.chartMargin.bottom;\r\n\r\n    mySvg = null;\r\n\r\n    xScale = null;\r\n\r\n    xAxis = null;\r\n    \r\n    componentDidMount(){\r\n        // console.log('component did mount, create svg');\r\n        this.createSvg();    \r\n    }    \r\n\r\n    componentDidUpdate(){\r\n        // console.log('component did update');\r\n        this.updateChart(this.props.data);\r\n    }\r\n\r\n    createSvg = () =>{\r\n        const accessToRef = this.chartRef.current;\r\n\r\n        const w1 = accessToRef.clientWidth;\r\n        // console.log('w1: ', w1);\r\n\r\n        this.width3 = w1 - this.chartMargin.left - this.chartMargin.right;\r\n\r\n        this.mySvg = d3.select(accessToRef)\r\n            .append('svg')\r\n            .attr('width', this.width3 + this.chartMargin.left + this.chartMargin.right)\r\n            .attr('height', this.height3 + this.chartMargin.top + this.chartMargin.bottom)\r\n            .append('g')\r\n            .attr('transform', \"translate(\" + this.chartMargin.left + \",\" + this.chartMargin.top + \")\");\r\n\r\n        this.xScale = d3.scaleBand()\r\n            .range([0, this.width3])\r\n            .padding(.1)\r\n            .round(true);\r\n\r\n        // x axis\r\n        this.xAxis = this.mySvg.append('g')\r\n            .attr('transform', 'translate(0,' + this.height3 + ')');\r\n            \r\n        this.yScale = d3.scaleLinear()\r\n            .range([this.height3, 0])\r\n            .clamp(true);\r\n\r\n        // y axis\r\n        this.yAxis = this.mySvg.append('g')\r\n            .attr('class', 'myYaxis');\r\n\r\n    }\r\n\r\n    updateChart = () =>{\r\n        // x axis---------------------------------------------\r\n        this.xScale.domain(this.props.data.map(function(d){\r\n            return d.index;\r\n        }));\r\n        // this.xAxis.transition().duration(1000).call(d3.axisBottom(this.xScale));\r\n        this.xAxis.transition().duration(1000).call(d3.axisBottom(this.xScale).tickFormat(function(d, i){\r\n            if(i === 0){\r\n                return '✓ ' + d;\r\n            }\r\n            else{\r\n                return d;\r\n            }\r\n        }));\r\n\r\n        // rotate x-axis labels\r\n        this.xAxis.selectAll('text')\r\n            .style('text-anchor', 'end')\r\n            .attr('dx', '-.8em')\r\n            .attr('dy', '.15em')\r\n            .attr('transform', 'rotate(-20)');\r\n\r\n        // y axis--------------------------------------------\r\n        this.yScale.domain([0, d3.max(this.props.data, function(d){\r\n            return d.value;\r\n        })])\r\n        .range([this.height3, 0])\r\n        .clamp(true);\r\n        this.yAxis.transition().duration(1000).call(d3.axisLeft(this.yScale).tickFormat(function(d){\r\n            return d + '%';\r\n        }).ticks(2));\r\n\r\n        const selectionBar = this.mySvg.selectAll('.bar');\r\n        const binding = selectionBar.data(this.props.data);\r\n\r\n        const that = this;\r\n\r\n        // update existing bar\r\n        binding.transition()\r\n            .duration(1000)\r\n            .attr('x', function(d){\r\n                return that.xScale(d.index);\r\n            })\r\n            .attr('y', function(d){\r\n                return that.yScale(d.value);\r\n            })\r\n            .attr('width', that.xScale.bandwidth())\r\n            .attr('height', function(d){\r\n                return that.height3 - that.yScale(d.value);\r\n            })\r\n            .attr('fill', function(d){\r\n                if(d.partyId === \"republican\"){\r\n                    return '#DE3535';\r\n                }\r\n                else if(d.partyId === \"democrat\"){\r\n                    return '#0471E6';\r\n                }\r\n                else{\r\n                    return '#595959';\r\n                }\r\n            });\r\n\r\n        // enter new bar\r\n        binding.enter()\r\n            .append('rect')\r\n            .attr('class', 'bar')\r\n            .attr('x', function(d){\r\n                return that.xScale(d.index);\r\n            })\r\n            .attr('y', function(d){\r\n                return that.yScale(d.value);\r\n            })\r\n            .attr('width', that.xScale.bandwidth())\r\n            .attr('height', function(d){\r\n                return that.height3 - that.yScale(d.value);\r\n            })\r\n            .attr('fill', function(d){\r\n                if(d.partyId === \"republican\"){\r\n                    return '#DE3535';\r\n                }\r\n                else if(d.partyId === \"democrat\"){\r\n                    return '#0471E6';\r\n                }\r\n                else{\r\n                    return '#595959';\r\n                }\r\n            })\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1);\r\n\r\n        // exit bar\r\n        binding.exit()\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 0)\r\n            .remove();\r\n\r\n    }   \r\n\r\n    render(){\r\n        return (\r\n            <div className='BarChart'>\r\n                <div ref={this.chartRef}></div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default barChart;\r\n","import React, {Component} from 'react';\r\nimport './ElectionMap.css';\r\nimport joeImg from '../../assets/bidenj.png';\r\nimport trumpImg from '../../assets/trumpd.png';\r\n\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport BarChart from '../BarChart/BarChart';\r\n\r\nclass electionMap extends Component {\r\n    chartRef = React.createRef();\r\n\r\n    state = {\r\n        democratCount: 0,\r\n        republicanCount: 0,\r\n        democratVotes: 0,\r\n        republicanVotes: 0,\r\n        barchartdata: [],\r\n        isStateDetailPanelVisible: false,\r\n        tableContent: [],\r\n        isMapSpinnerVisible: true,\r\n    };\r\n\r\n    componentDidMount(){\r\n        // console.log('component did mount, electionMap');\r\n\r\n        const windowWidth = window.innerWidth;\r\n        this.setState({\r\n            windowWidth: windowWidth\r\n        });\r\n\r\n        this.createMap();    \r\n\r\n        // add event listner\r\n        window.addEventListener('resize', () =>{\r\n            // only trigger when window width changed\r\n            const oldWindowWidth = this.state.windowWidth;\r\n            const newWindowWidth = window.innerWidth;\r\n            if(newWindowWidth !== oldWindowWidth){\r\n                this.setState({\r\n                    windowWidth: newWindowWidth\r\n                });\r\n\r\n                this.createMap();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // perform any necessary clanup before this componetn is unmounted and destroyed\r\n        window.addEventListener('resize', () =>{\r\n            this.createMap();\r\n        });\r\n    }\r\n    \r\n    createMap = () =>{\r\n        // move tooltip to right when resize\r\n        this.setState({\r\n            stateDetailLeft: 0,\r\n            isMapSpinnerVisible: true,\r\n        });\r\n        const accessToRef = this.chartRef.current;\r\n\r\n        // remove svg for rerendering on resize\r\n        d3.select(accessToRef).select('svg').remove();\r\n\r\n        const mapContainerEl = document.querySelector('.mapContainer');\r\n\r\n        const mapWidth = parseFloat(getComputedStyle(mapContainerEl).width.replace('px', ''));\r\n        const mapHeight = mapWidth * 0.6;\r\n\r\n        const worldMapSvg = d3.select(accessToRef)\r\n          .append('svg')\r\n          .attr('width', mapWidth)\r\n          .attr('height', mapHeight)\r\n          .append('g');\r\n\r\n        const files = [\r\n            d3.json('/myD3Files/counties-10m.json'), \r\n            d3.json('/myD3Files/president.json'),\r\n            d3.json('/myD3Files/state_name.json'),\r\n        ];\r\n        \r\n        const projection = d3.geoAlbersUsa()\r\n            .translate([mapWidth / 2, mapHeight / 2])\r\n            .scale(mapWidth);\r\n\r\n        const worldMapPath = d3.geoPath()\r\n            .projection(projection);\r\n\r\n        const that = this;\r\n\r\n        Promise.all(files.map(url => (url))).then(function(values){\r\n            // console.log('values: ', values);\r\n\r\n            const tableInformation = values[1].data.races.map(val =>{\r\n                const joeBidenData = val.candidates.filter(candidate =>{\r\n                    return candidate.candidate_key === \"bidenj\";\r\n                });\r\n\r\n                const donaldTrumpData = val.candidates.filter(candidate =>{\r\n                    return candidate.candidate_key === \"trumpd\";\r\n                });\r\n\r\n                return {\r\n                    stateName: val.state_name,\r\n                    joeBiden: joeBidenData,\r\n                    doanldTrump: donaldTrumpData,\r\n                    reportingValue: val.reporting_value,\r\n                    winner: val.candidates[0].candidate_key,\r\n                };\r\n            })\r\n\r\n            that.setState({\r\n                democratCount: values[1].data.party_control[1].parties.democrat.count,\r\n                republicanCount: values[1].data.party_control[1].parties.republican.count,\r\n                democratVotes: values[1].data.party_control[1].parties.democrat.votes,\r\n                democratPercent: values[1].data.party_control[1].parties.democrat.percent,\r\n                republicanVotes: values[1].data.party_control[1].parties.republican.votes,\r\n                republicanPercent: values[1].data.party_control[1].parties.republican.percent,\r\n                tableContent: tableInformation,\r\n            });\r\n\r\n            // topojson feature converts\r\n            const states = topojson.feature(values[0], values[0].objects.states).features;\r\n\r\n            // console.log('states: ', states);\r\n\r\n            states.forEach(function(state_value, state_index){\r\n                values[1].data.races.forEach(function(race_value, race_index){\r\n                    values[2].forEach(function(stateName_value, stateName_index){\r\n                        if(state_value.properties.name === stateName_value.name){\r\n                            states[state_index].properties.abbreviation = stateName_value.abbreviation;\r\n                        }\r\n\r\n                        if(state_value.properties.name === race_value.state_name){\r\n                            states[state_index].properties.candidates = race_value.candidates;\r\n                            states[state_index].properties.electoralVotes = race_value.electoral_votes;\r\n                            states[state_index].properties.reportingValue = race_value.reporting_value;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            // console.log('updated states: ', states);\r\n    \r\n            // add a path for each state\r\n            worldMapSvg.selectAll('.state')\r\n                .data(states)\r\n                .enter()\r\n                .append('path')\r\n                .attr('class', 'state')\r\n                .attr('d', worldMapPath)\r\n                .attr('stroke', 'white')\r\n                .attr('stroke-width', 1)\r\n                .attr('fill', function(d){\r\n                    // console.log('d: ', d);\r\n                    // Puerto Rico, American Samoa, United States Virgin Islands, Commonwealth of the Northern Mariana Islands, Guam\r\n                    if(!d.properties.candidates){\r\n                        return 'yellow';\r\n                    }\r\n\r\n                    const partyId = d.properties.candidates[0].party_id;\r\n                    if(partyId === 'democrat'){\r\n                        return '#0471E6';\r\n                    }\r\n                    else if(partyId === 'republican'){\r\n                        return '#DE3535';\r\n                    }\r\n                    else{\r\n                        return 'green';\r\n                    }\r\n                })\r\n                .on('mouseover', function(d){\r\n                    // console.log('check d: ', d);\r\n\r\n                    const candidateArray = [];\r\n                    d.properties.candidates.forEach((val, i) => {\r\n                        if(i <  6){\r\n                            candidateArray.push({\r\n                                index: val.last_name === 'None of these candidates' ? 'none' : val.last_name,\r\n                                value: val.percent,\r\n                                partyId: val.party_id,\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    const x = d3.event.pageX;\r\n                    const y = d3.event.pageY;\r\n\r\n                    const tooltipWidth = document.querySelector('.tooltip').offsetWidth;\r\n                    const tooltipHeight = document.querySelector('.tooltip').offsetHeight;\r\n\r\n                    that.setState({\r\n                        barchartdata: candidateArray,\r\n                        hoverStateName: d.properties.name,\r\n                        isStateDetailPanelVisible: true,\r\n                        stateDetailLeft: x - (tooltipWidth / 2) + 'px',\r\n                        stateDetailTop: y - (tooltipHeight + 24) + 'px',\r\n                        electoralVotes: d.properties.electoralVotes,\r\n                        reportingValue: d.properties.reportingValue,\r\n                    });\r\n                })\r\n                .on('mouseout', function(d){\r\n                    that.setState({\r\n                        isStateDetailPanelVisible: false,\r\n                    });\r\n                });\r\n\r\n            worldMapSvg.selectAll('.stateName')\r\n                .data(states)\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', 'stateName')\r\n                .text(function(d){\r\n                    return d.properties.abbreviation;\r\n                })\r\n                .attr('x', function(d){\r\n                    return worldMapPath.centroid(d)[0] ? worldMapPath.centroid(d)[0] : 0;\r\n                })\r\n                .attr('y', function(d){\r\n                    return worldMapPath.centroid(d)[1] ? worldMapPath.centroid(d)[1] : 0;\r\n                })\r\n                .attr('font-size', '9px')\r\n                .attr('font-weight', 'bold')\r\n                .attr('fill', function(d){\r\n                    const states = 'Hawaii, Vermont, Massachusetts, Rhode Island, New Jersey, Delaware';\r\n                    if(states.includes(d.properties.name)){\r\n                        return 'black';\r\n                    }\r\n                    else{\r\n                        return 'white';\r\n                    }\r\n                })\r\n                .attr('dx', function(d){\r\n                    if( d.properties.name === 'Hawaii'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'Vermont'){\r\n                        return '-1%';\r\n                    }\r\n                    else if(d.properties.name === 'Massachusetts'){\r\n                        return '4%';\r\n                    }\r\n                    else if(d.properties.name === 'Rhode Island'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'New Jersey'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'Delaware'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'Florida'){\r\n                        return '1%';\r\n                    }\r\n                    else if(d.properties.name === 'Louisiana'){\r\n                        return '-0.8%';\r\n                    }\r\n                    else if(d.properties.name === 'Maryland'){\r\n                        return '-0.4%';\r\n                    }\r\n                    else{\r\n                        return 0;\r\n                    }\r\n                })\r\n                .attr('dy', function(d){\r\n                    if( d.properties.name === 'Hawaii'){\r\n                        return '-1%';\r\n                    }\r\n                    else if(d.properties.name === 'Vermont'){\r\n                        return '-3%';\r\n                    }\r\n                    else if(d.properties.name === 'Rhode Island'){\r\n                        return '3%';\r\n                    }\r\n                    else if(d.properties.name === 'New Jersey'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'Delaware'){\r\n                        return '2%';\r\n                    }\r\n                    else if(d.properties.name === 'Maryland'){\r\n                        return '-0.3%';\r\n                    }\r\n                    else{\r\n                        return '.35em';\r\n                    }\r\n                })\r\n                .style('pointer-events', 'none');\r\n\r\n                that.setState({\r\n                    isMapSpinnerVisible: false,\r\n                })\r\n        });  \r\n    }\r\n\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    \r\n    render(){\r\n        // console.log('electoinMap==========================', this.state);\r\n\r\n        const balanceHeader = <div className='headerDiv'>\r\n            <div className='balanceCount'>\r\n                <div className='disp-flex flex-dir-col' style={{color: '#0471E6', fontWeight: 'bold'}}>\r\n                    <span style={{fontSize: '48px'}}>{this.state.democratCount}</span>\r\n                    <span style={{fontSize: '18px', paddingBottom: '8px'}}>BIDEN <FontAwesomeIcon icon='check' color='#6DB65B' /></span>\r\n                </div>\r\n                <div style={{color: '#777'}}>270 to win</div>\r\n                <div className='disp-flex flex-dir-col' style={{color: '#DE3535', fontWeight: 'bold', textAlign: 'end'}}>\r\n                    <span style={{fontSize: '48px'}}>{this.state.republicanCount}</span>\r\n                    <span style={{fontSize: '18px', paddingBottom: '8px'}}>TRUMP</span>\r\n                </div>\r\n            </div>\r\n            <div className='balanceChartDiv'>\r\n                <div className='middleBar'></div>\r\n                <div style={{flex: `1 1 ${this.state.democratCount}%`, backgroundColor: '#0471E6'}}></div>\r\n                <div style={{flex: `1 1 ${this.state.republicanCount}%`, backgroundColor: '#DE3535'}}></div>\r\n            </div>\r\n            <div className='disp-flex justify-content--space-between' style={{color: '#777'}}>\r\n                <span className='votesAndPercentage'>{this.numberWithCommas(this.state.democratVotes)} votes ({this.state.democratPercent}%)</span>\r\n                <span className='votesAndPercentage'>{this.numberWithCommas(this.state.republicanVotes)} votes ({this.state.republicanPercent}%)</span>\r\n            </div>\r\n        </div>;\r\n\r\n        const tooltipStyle = {\r\n            opacity: this.state.isStateDetailPanelVisible ? 1 : 0,\r\n            left: this.state.stateDetailLeft,\r\n            top: this.state.stateDetailTop,\r\n        };\r\n        \r\n        const tooltip = <div className='tooltip' style={tooltipStyle}>\r\n            <div className='detailHeader'>\r\n                <span className='detailStateName'>{this.state.hoverStateName}</span>\r\n                <span className='detailElectoralVotes'>{this.state.electoralVotes} Electorial Votes</span>\r\n                <span className='detailReportingValue'>{this.state.reportingValue} IN</span>\r\n            </div>\r\n            <div style={{marginTop: '-10px'}}>\r\n                <BarChart data={this.state.barchartdata} />\r\n            </div>\r\n        </div>;\r\n\r\n        const tableContent = this.state.tableContent.map((val, i) =>{\r\n            // console.log('table val: ', val);\r\n            const winner = val.winner;\r\n\r\n            return <tr key={i}>\r\n                <td style={{fontWeight: '900', fontSize: '16px'}}>{val.stateName}</td>\r\n                <td style={{fontWeight: '900', fontSize: '16px', backgroundColor: winner === 'bidenj' ? '#0471E6' : 'transparent', color: winner === 'bidenj' ? 'white' : 'black'}}><span style={{display: 'inline-block', width: '80px'}}>{winner === 'bidenj' ? <FontAwesomeIcon icon='check' color='#78e35d' /> : ''} {val.joeBiden[0].percent_display}%</span></td>\r\n                <td style={{fontSize: '12px'}}>{this.numberWithCommas(val.joeBiden[0].votes)}</td>\r\n                <td></td>\r\n                <td style={{fontWeight: '900', fontSize: '16px', backgroundColor: winner === 'trumpd' ? '#DE3535' : 'transparent', color: winner === 'trumpd' ? 'white' : 'black'}}><span style={{display: 'inline-block', width: '80px'}}>{winner === 'trumpd' ? <FontAwesomeIcon icon='check' color='#78e35d' /> : ''} {val.doanldTrump[0].percent_display}%</span></td>\r\n                <td style={{fontSize: '12px'}}>{this.numberWithCommas(val.doanldTrump[0].votes)}</td>\r\n                <td></td>\r\n                <td style={{fontSize: '12px'}} className='hide-tablet'>{val.reportingValue} in</td>\r\n            </tr>;\r\n        })\r\n\r\n        return (\r\n            <div className='ElectionMap'>\r\n                {balanceHeader}\r\n\r\n                <h1 className='mapTitle'>2020 Presidential Election Results</h1>\r\n                <div className='mapDescription'>Hover over the map for details</div>\r\n\r\n                <div className='mapContainer'>\r\n                    <div className='loadingIconDiv' style={{display: this.state.isMapSpinnerVisible ? 'flex' : 'none'}}><FontAwesomeIcon className='spinAnimation' icon={['fas', 'circle-notch']} color='black' /></div>\r\n\r\n                    <div ref={this.chartRef}></div>\r\n                </div>\r\n\r\n                {tooltip}\r\n\r\n                <div style={{overflowX: 'auto'}}>\r\n                    <table className='myTable'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>States</th>\r\n                                <th>\r\n                                    <div className='joeImgContainer'>\r\n                                        <img src={joeImg}  style={{width: '100%'}} alt='joe biden' />\r\n                                        <div className='partyDemUnderImg'>\r\n                                            DEM\r\n                                        </div>\r\n                                    </div>\r\n                                    <br/>Percent\r\n                                </th>\r\n                                <th>Votes</th>\r\n                                <th></th>\r\n                                <th>\r\n                                    <div className='trumpImgContainer'>\r\n                                        <img src={trumpImg}  style={{width: '100%'}} alt='donald trump' />\r\n                                        <div className='partyGopUnderImg'>\r\n                                            GOP\r\n                                        </div>\r\n                                    </div>\r\n                                    <br/>Percent\r\n                                </th>\r\n                                <th>Votes</th>\r\n                                <th></th>\r\n                                <th className='hide-tablet'>% in</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableContent}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default electionMap;\r\n","import React from 'react';\r\nimport './Footer.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst footer = (props) =>{\r\n\r\n    return(\r\n        <div className='Footer'>\r\n            <div style={{padding: '0 0 30px 0'}}>\r\n                <a className='btn github' href=\"https://github.com/jinredhub\"><FontAwesomeIcon icon={['fab', 'github-alt']} color='black' /></a>\r\n            </div>\r\n            <p style={{color: 'white'}}>Jin Redmond</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer;","import React, {Component} from 'react';\r\nimport './Home.css';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport ElectionMap from '../../components/ElectionMap/ElectionMap';\r\nimport Footer from '../../components/Footer/Footer';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isHamburgerMenuOpen: false,\r\n    };\r\n\r\n    componentDidMount(){ \r\n       \r\n    }\r\n\r\n    hamburgerMenuHandler = () =>{\r\n        this.setState({\r\n            isHamburgerMenuOpen: !this.state.isHamburgerMenuOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        // console.log('======================', this.state);\r\n\r\n        return (\r\n            <div className=\"Home\">\r\n                <Navbar \r\n                    clicked={this.hamburgerMenuHandler} \r\n                    isHamburgerMenuOpen={this.state.isHamburgerMenuOpen}\r\n                    activeLink='Election Map'\r\n                />\r\n                \r\n                <section>\r\n                    <div className='tabcontent'>\r\n                        <ElectionMap />\r\n                    </div>\r\n                </section>\r\n\r\n                <Footer />\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home/Home';\n\n// fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBars, faCheck, faMugHot, faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faBars, faCheck, faGithubAlt, faMugHot, faCircleNotch);\n\n\nclass App extends Component {\n\n    render(){\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Route path='/' exact component={Home}/>\n                </div>\n            </BrowserRouter>\n          );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}