[{"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\index.js":"1","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\App.js":"2","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\pages\\Home\\Home.js":"5","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\ElectionMap\\ElectionMap.js":"6","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\BarChart\\BarChart.js":"7","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\Footer\\Footer.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":780,"mtime":1609963279488,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1656,"mtime":1609959846881,"results":"13","hashOfConfig":"10"},{"size":1246,"mtime":1609959868033,"results":"14","hashOfConfig":"10"},{"size":18124,"mtime":1610002681767,"results":"15","hashOfConfig":"10"},{"size":7645,"mtime":1609961264690,"results":"16","hashOfConfig":"10"},{"size":522,"mtime":1609873627899,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e605oq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\index.js",[],["37","38"],"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\App.js",[],"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\Navbar\\Navbar.js",["39"],"import React from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst navbar = (props) =>{\r\n    const style={'display': 'none'};\r\n    const isHamburgerMenuOpen = props.isHamburgerMenuOpen;\r\n\r\n    const links = [\r\n        {'href': 'https://jinredhub.github.io/arpeggios/', 'name': 'Arpeggios'},\r\n        {'href': 'https://jinredhub.github.io/daw/', 'name': 'DAW'},\r\n        {'href': 'https://jinredhub.github.io/us-map-covid-19/', 'name': 'Covid Map'},\r\n        {'href': 'https://jinredhub.github.io/us-map-covid-19/', 'name': 'Election Map'},\r\n    ];\r\n\r\n    const displayLinks = links.map((val, i) =>{\r\n        return <a href={val.href} className={val.name === props.activeLink ? 'active' : ''} key={i}>{val.name}</a>;\r\n    });\r\n\r\n    if(isHamburgerMenuOpen){\r\n        style.display = 'block';\r\n    }\r\n    \r\n    return(\r\n        <div className='Navbar'>\r\n            <div className='desktop'>\r\n                <div>\r\n                    {displayLinks}\r\n                </div>               \r\n            </div>\r\n            <div className='mobile'>\r\n                <div className='mobildLinks' style={style}>\r\n                    {displayLinks}\r\n                </div>\r\n                <a href=\"#\" className='hamburgerIcon' aria-label=\"click to open mobile navigation menu\" onClick={props.clicked}>\r\n                    {/* <i className=\"fas fa-bars\"></i> */}\r\n                    <FontAwesomeIcon\r\n                        icon={['fas', 'bars']}\r\n                        size='sm'\r\n                    />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar;","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\pages\\Home\\Home.js",["40"],"import React, {Component} from 'react';\r\nimport './Home.css';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport ElectionMap from '../../components/ElectionMap/ElectionMap';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isHamburgerMenuOpen: false,\r\n    };\r\n\r\n    componentDidMount(){ \r\n       \r\n    }\r\n\r\n    hamburgerMenuHandler = () =>{\r\n        this.setState({\r\n            isHamburgerMenuOpen: !this.state.isHamburgerMenuOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n        return (\r\n            <div className=\"Home\">\r\n                <Navbar \r\n                    clicked={this.hamburgerMenuHandler} \r\n                    isHamburgerMenuOpen={this.state.isHamburgerMenuOpen}\r\n                    activeLink='Election Map'\r\n                />\r\n                \r\n                <section>\r\n                    <div className='tabcontent'>\r\n                        <ElectionMap />\r\n                    </div>\r\n                </section>\r\n\r\n                <Footer />\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\ElectionMap\\ElectionMap.js",["41","42"],"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\BarChart\\BarChart.js",[],"C:\\Users\\Jin\\Documents\\Berkeley coding folder\\Assignments\\election-map\\client\\src\\components\\Footer\\Footer.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":35,"column":17,"nodeType":"49","endLine":35,"endColumn":129},{"ruleId":"50","severity":1,"message":"51","line":7,"column":10,"nodeType":"52","messageId":"53","endLine":7,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":372,"column":41,"nodeType":"49","endLine":372,"endColumn":86},{"ruleId":"54","severity":1,"message":"55","line":383,"column":41,"nodeType":"49","endLine":383,"endColumn":88},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]